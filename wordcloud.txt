from bs4 import BeautifulSoup
import requests
from konlpy.tag import Twitter
from collections import Counter
from wordcloud import WordCloud
import matplotlib.pyplot as plt

search_word = "이숭무"  # 검색어 지정
title_list = []

def get_titles(start_num, end_num):
    #start_num ~ end_num까지 크롤링
    while 1:
        if start_num > end_num:
            break
        #print(start_num)
 
        url = 'https://search.daum.net/nate?thr=sbma&w=tot&q={}&start={}'.format(search_word,start_num)
        #웹에서 정보 가져오기
        req = requests.get(url) # get방식 요청
 
        # 정상적인 request 확인
        if req.ok:
            html = req.text
            ## BeautifulSoup으로 html소스를 python객체로 변환하기
            ## 첫 인자는 html소스코드, 두 번째 인자는 어떤 parser를 이용할지 명시.
            ## 이 글에서는 Python 내장 html.parser를 이용했다.
            soup = BeautifulSoup(html, 'html.parser')
 
            # 뉴스제목 뽑아오기
            titles = soup.select('#container > li > div > a')
            # list에 넣어준다
            f = open("texst.txt", "w");
            for title in titles:
                f.write(title.text)
                title_list.append(title.text)
            f.close();
        start_num += 10
    #print(title_list)
###########################################################################

    font_path = 'c:\\windows\\fonts\\NanumGothic.ttf'
    wordcloud = WordCloud(
    	font_path = font_path,
    	width = 800,
    	height = 800
    	)
    wordcloud = wordcloud.generate(" ".join(title_list))

###############################################################################    
    
    fig = plt.figure(figsize=(12,12))
    plt.imshow(wordcloud)
    plt.axis("off")
    plt.show()
    fig.savefig('wordcloud_without_axisoff.png')

################################################################################    
if __name__ == '__main__':
    #1~200번게시글 까지 크롤링
    get_titles(1,200)
